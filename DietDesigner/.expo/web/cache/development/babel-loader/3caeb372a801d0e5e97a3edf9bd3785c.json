{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/design-a-diet-iiitd/DietDesigner/navigation/BottomTabNavigator.js\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\nimport CartScreen from \"../screens/CartScreen\";\nimport HeaderImageLogo from \"../components/HeaderLogo.js\";\nimport StackNavigator from \"./StackNavigator\";\nvar BottomTab = createBottomTabNavigator();\nvar INITIAL_ROUTE_NAME = 'Home';\nexport default function BottomTabNavigator(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  navigation.setOptions({\n    headerTitle: getHeaderTitle(route),\n    headerRight: function headerRight() {\n      return React.createElement(HeaderImageLogo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 80\n        }\n      });\n    },\n    headerShown: showHeader(route)\n  });\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Home',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"md-home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: StackNavigator,\n    options: {\n      title: 'Search',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"md-search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Diet\",\n    component: LinksScreen,\n    options: {\n      title: 'Diets',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"md-book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Cart\",\n    component: CartScreen,\n    options: {\n      title: 'Cart',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TabBarIcon, {\n          focused: focused,\n          name: \"md-cart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 40\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getHeaderTitle(route) {\n  var _route$state$routes$r, _route$state, _route$state$routes$r2;\n\n  var routeName = (_route$state$routes$r = (_route$state = route.state) == null ? void 0 : (_route$state$routes$r2 = _route$state.routes[route.state.index]) == null ? void 0 : _route$state$routes$r2.name) != null ? _route$state$routes$r : INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n\n    case 'Search':\n      return 'Search for your items';\n\n    case 'Diet':\n      return 'Plan your Diet';\n\n    case 'Cart':\n      return 'Your cart';\n  }\n}\n\nfunction showHeader(route) {\n  var _route$state$routes$r3, _route$state2, _route$state2$routes$;\n\n  var routeName = (_route$state$routes$r3 = (_route$state2 = route.state) == null ? void 0 : (_route$state2$routes$ = _route$state2.routes[route.state.index]) == null ? void 0 : _route$state2$routes$.name) != null ? _route$state$routes$r3 : INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return true;\n\n    case 'Search':\n      return false;\n\n    case 'Diet':\n      return true;\n\n    case 'Cart':\n      return true;\n  }\n}","map":{"version":3,"sources":["/Users/administrator/Desktop/design-a-diet-iiitd/DietDesigner/navigation/BottomTabNavigator.js"],"names":["createBottomTabNavigator","React","TabBarIcon","HomeScreen","LinksScreen","CartScreen","HeaderImageLogo","StackNavigator","BottomTab","INITIAL_ROUTE_NAME","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","headerRight","headerShown","showHeader","title","tabBarIcon","focused","routeName","state","routes","index","name"],"mappings":"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","sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport CartScreen from '../screens/CartScreen';\nimport HeaderImageLogo from '../components/HeaderLogo.js';\nimport StackNavigator from './StackNavigator';\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({headerTitle: getHeaderTitle(route), headerRight: ()=> <HeaderImageLogo/>, headerShown: showHeader(route)});\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: 'Home',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-home\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Search\"\n        component={StackNavigator}\n        options={{\n          title: 'Search',\n          \n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-search\" />\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Diet\"\n        component={LinksScreen}\n        options={{\n          title: 'Diets',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Cart\"\n        component={CartScreen}\n        options={{\n          title: 'Cart',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-cart\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'How to get started';\n    case 'Search':\n      return 'Search for your items';\n    case 'Diet':\n      return 'Plan your Diet'\n    case 'Cart':\n      return 'Your cart'\n  }\n}\n\n\nfunction showHeader(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return true\n    case 'Search':\n      return false\n    case 'Diet':\n      return true\n    case 'Cart':\n      return true\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
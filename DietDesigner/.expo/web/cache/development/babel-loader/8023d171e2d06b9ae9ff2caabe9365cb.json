{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/administrator/Desktop/design-a-diet-iiitd/DietDesigner/components/NutritionalInfoScreenComponents/AllNutrients.js\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Entypo } from '@expo/vector-icons';\nexport default function AllNutrients(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"Sugars\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var iter = [{\n    nutrient: 'Copper',\n    amount: '800mg'\n  }, {\n    nutrient: 'Ash',\n    amount: '700mg'\n  }, {\n    nutrient: 'Zn',\n    amount: '600mg'\n  }, {\n    nutrient: 'Sucrose',\n    amount: '500mg'\n  }, {\n    nutrient: 'Fructose',\n    amount: '400mg'\n  }, {\n    nutrient: 'Lactose',\n    amount: '300mg'\n  }, {\n    nutrient: 'Vitamin G',\n    amount: '300mg'\n  }, {\n    nutrient: 'Calcium',\n    amount: '200mg'\n  }, {\n    nutrient: 'HCFS',\n    amount: '150mg'\n  }, {\n    nutrient: 'Vitamin A',\n    amount: '100mg'\n  }, {\n    nutrient: 'Vitamin C',\n    amount: '20mg'\n  }, {\n    nutrient: 'Vitamin D',\n    amount: '10mg'\n  }, {\n    nutrient: 'Vitamin E',\n    amount: '15mg'\n  }];\n\n  var onPressHandler = function onPressHandler() {\n    navigation.navigate('MajorNutrients');\n  };\n\n  var colorList = ['red', 'black', 'lime', 'blue', 'darkorange', 'pink', 'violet', 'mediumturquoise', 'purple', 'skyblue'];\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.tabbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPressHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.notselected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Composition\")), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Others\"))), React.createElement(View, {\n    style: {\n      backgroundColor: '#fff',\n      width: 260,\n      borderWidth: 1,\n      borderColor: 'black',\n      marginTop: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: 257\n    },\n    mode: \"dropdown\",\n    selectedValue: selectedValue,\n    onValueChange: function onValueChange(itemValue, itemPosition) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.item, {\n    label: \"Sugars\",\n    value: \"Sugars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Minerals\",\n    value: \"Minerals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Vitamins\",\n    value: \"Vitamins\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Essential Amino Acids\",\n    value: \"Essential Amino Acids\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Non Essential Amino Acids\",\n    value: \"Non Essential Amino Acids\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Essential Fatty Acids\",\n    value: \"Essential Fatty Acids\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.item, {\n    label: \"Miscellaneous\",\n    value: \"Miscellaneous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, iter.map(function (item) {\n    return React.createElement(View, {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, React.createElement(Entypo, {\n      name: \"dot-single\",\n      size: 26,\n      color: colorList[Math.floor(Math.random() * 10)],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, item.nutrient)), React.createElement(Text, {\n      style: styles.Light,\n      marginLeft: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, item.amount));\n  })));\n}\nstyles = StyleSheet.create({\n  container: {\n    flex: 4,\n    elevation: 2\n  },\n  Bold: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  Light: {\n    color: '#C4C4C4'\n  },\n  tabbar: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  selected: {\n    fontWeight: 'bold',\n    textDecorationLine: 'underline'\n  },\n  notselected: {\n    color: '#908989'\n  }\n});","map":{"version":3,"sources":["/Users/administrator/Desktop/design-a-diet-iiitd/DietDesigner/components/NutritionalInfoScreenComponents/AllNutrients.js"],"names":["React","useState","Entypo","AllNutrients","navigation","selectedValue","setSelectedValue","iter","nutrient","amount","onPressHandler","navigate","colorList","styles","container","tabbar","notselected","selected","backgroundColor","width","borderWidth","borderColor","marginTop","itemValue","itemPosition","map","item","Math","floor","random","Light","StyleSheet","create","flex","elevation","Bold","fontWeight","fontSize","color","flexDirection","justifyContent","textDecorationLine"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity, ScrollView, Picker} from 'react-native';\nimport { Entypo } from '@expo/vector-icons';\n\nexport default function AllNutrients({navigation}) {\n\n    const [selectedValue, setSelectedValue] = useState(\"Sugars\");\n\n    const iter = [\n        {nutrient: 'Copper', amount: '800mg'},\n        {nutrient: 'Ash', amount: '700mg'},\n        {nutrient: 'Zn', amount: '600mg'},\n        {nutrient: 'Sucrose', amount: '500mg'},\n        {nutrient: 'Fructose', amount: '400mg'},\n        {nutrient: 'Lactose', amount: '300mg'},\n        {nutrient: 'Vitamin G', amount: '300mg'},\n        {nutrient: 'Calcium', amount: '200mg'},\n        {nutrient: 'HCFS', amount: '150mg'},\n        {nutrient: 'Vitamin A', amount: '100mg'},\n        {nutrient: 'Vitamin C', amount: '20mg'},\n        {nutrient: 'Vitamin D', amount: '10mg'},\n        {nutrient: 'Vitamin E', amount: '15mg'},\n\n    ]\n\n    const onPressHandler = () => {\n        navigation.navigate('MajorNutrients');\n    }\n\n\n    const colorList = ['red','black','lime','blue','darkorange','pink','violet','mediumturquoise','purple','skyblue'];\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.tabbar}>\n            <TouchableOpacity onPress={onPressHandler}>\n                <Text style={styles.notselected}>\n                    Composition\n                </Text>\n            </TouchableOpacity>\n            <TouchableOpacity>\n                <Text style={styles.selected}>\n                    Others\n                </Text>\n            </TouchableOpacity>\n            </View>\n            <View style={{backgroundColor:'#fff', width: 260, borderWidth: 1, borderColor: 'black', marginTop: 5,}}>\n            <Picker style={{width: 257}} mode='dropdown' selectedValue={selectedValue} onValueChange={(itemValue, itemPosition) => setSelectedValue(itemValue)}>\n                <Picker.item label='Sugars' value='Sugars' />\n                <Picker.item label='Minerals' value='Minerals' />\n                <Picker.item label='Vitamins' value='Vitamins' />\n                <Picker.item label='Essential Amino Acids' value='Essential Amino Acids' />\n                <Picker.item label='Non Essential Amino Acids' value='Non Essential Amino Acids' />\n                <Picker.item label='Essential Fatty Acids' value='Essential Fatty Acids' />\n                <Picker.item label='Miscellaneous' value='Miscellaneous' />\n            </Picker>\n            </View>\n            <ScrollView>\n                {iter.map((item) => {\n                    return (\n                        <View flexDirection='row' justifyContent='space-evenly'>\n                            <View flexDirection='row' alignItems='center'>\n                                <Entypo name=\"dot-single\" size={26} color={colorList[Math.floor(Math.random() * 10)]}/>\n                                <Text>\n                                    {item.nutrient}\n                                </Text>\n                            </View>\n                            <Text style={styles.Light} marginLeft={5}>\n                                {item.amount}\n                            </Text>\n                        </View>\n                    )\n                })}\n            </ScrollView>\n        </View>\n    );\n}\n\nstyles = StyleSheet.create({\n    container: {\n        flex: 4,\n        elevation: 2,\n        // backgroundColor: 'blue',\n        \n    },\n    Bold: {\n        fontWeight: 'bold',\n        fontSize: 20,\n    },\n    Light: {\n        color: '#C4C4C4',\n    },\n    tabbar: {\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    },\n    selected: {\n        fontWeight: 'bold',\n        textDecorationLine: 'underline'\n    },\n    notselected: {\n        color: '#908989',\n    },\n})"]},"metadata":{},"sourceType":"module"}